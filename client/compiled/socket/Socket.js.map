{"version":3,"sources":["../../src/socket/Socket.js"],"names":[],"mappings":"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","file":"Socket.js","sourcesContent":["\"use strict\";\nconst List_1 = require(\"../util/collection/List\");\nconst MessageObject_1 = require(\"./message/MessageObject\");\nconst Player_1 = require(\"../player/Player\");\nclass Socket {\n    constructor() {\n        this.createSocketAndSetHandlers();\n        this.socketListeners = new List_1.List();\n        this.socketSendQueue = new List_1.List();\n    }\n    static getInstance() {\n        if (this.instance == null) {\n            this.instance = new Socket();\n        }\n        return this.instance;\n    }\n    createSocketAndSetHandlers() {\n        this.socket = new WebSocket(Socket.SOCKET_ADDRESS);\n        this.socket.onopen = (event) => {\n            this.onOpen();\n        };\n        this.socket.onmessage = (messageEvent) => {\n            this.onMessage(messageEvent.data);\n        };\n        this.socket.onerror = (event) => {\n            this.onError();\n        };\n        this.socket.onclose = (event) => {\n            this.onClose();\n        };\n    }\n    onOpen() {\n        this.socketSendQueue.forEach((messageObject) => {\n            this.send(messageObject);\n        });\n        if (Player_1.Player.isLoggedIn()) {\n            this.sendObject(\"PlayerUpdate\", Player_1.Player.getPlayerInstance());\n        }\n        this.socketListeners.forEach((listener) => {\n            listener.onSocketOpened();\n        });\n    }\n    onMessage(jsonMessage) {\n        var object = JSON.parse(jsonMessage);\n        console.log(\"Socket message received\");\n        console.log(object);\n        this.socketListeners.forEach((listener) => {\n            listener.onSocketObjectReceived(object);\n        });\n    }\n    onError() {\n        console.log(\"Socket Error\");\n    }\n    onClose() {\n        this.socketListeners.forEach((listener) => {\n            listener.onSocketClosed();\n        });\n        console.log(\"Socket closed\");\n        setTimeout(() => {\n            this.createSocketAndSetHandlers();\n        }, 5000);\n    }\n    addSocketListener(listener) {\n        this.socketListeners.add(listener);\n    }\n    removeSocketListener(listener) {\n        this.socketListeners.remove(listener);\n    }\n    sendObject(type, data) {\n        var messageObject = this.createMessageObject(type, data);\n        if (this.socket.readyState == WebSocket.OPEN) {\n            this.send(messageObject);\n        }\n        else {\n            this.socketSendQueue.add(messageObject);\n        }\n    }\n    createMessageObject(type, data) {\n        var message = new MessageObject_1.MessageObject();\n        message.type = type;\n        if (data) {\n            message.data = data;\n        }\n        return message;\n    }\n    send(messageObject) {\n        this.socket.send(JSON.stringify(messageObject));\n        console.log(\"Sent message\");\n        console.log(JSON.stringify(messageObject));\n    }\n}\nSocket.SOCKET_ADDRESS = \"ws://localhost:2000\";\nexports.Socket = Socket;\n//# sourceMappingURL=Socket.js.map"]}